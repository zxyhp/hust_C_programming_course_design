#ifndef SEARCHDIALOG_H
#define SEARCHDIALOG_H
#include <QDialog>
#include "cardoprotion.h"

namespace Ui {
class SearchDialog;
}

class SearchDialog : public QDialog
{
    Q_OBJECT

public:

    //===========================================================
    // 函数名：SearchDialog
    // 功能：SearchDialog类的构造函数，完成成员变量m_sortedRecords的
    //      初始化，并设置窗口界面的四个输入框的输入内容限制
    // 输入参数：有序食堂消费记录信息的链表头节点的指针；父窗口部件的指
    //         针（没有父窗口则会传入nullptr）
    // 返回值：空
    //===========================================================
    explicit SearchDialog(sortedXf *xf, QWidget *parent = nullptr);

    //===========================================================
    // 函数名：~SearchDialog
    // 功能：SearchDialog类的析构函数，在SearchDialog类的对象释放时
    //      释放ui
    // 输入参数：空
    // 返回值：空
    //===========================================================
    ~SearchDialog();

private slots:

    //===========================================================
    // 函数名：on_stuNumCBox_stateChanged
    // 功能：根据对学号勾选框的选择设置学号输入框的输入限制
    // 输入参数：选择信号（2表示选择，0表示取消选择）
    // 返回值：空
    //===========================================================
    void on_stuNumCBox_stateChanged(int arg1);

    //===========================================================
    // 函数名：on_nameCBox_stateChanged
    // 功能：根据对姓名勾选框的选择设置姓名输入框的输入限制
    // 输入参数：选择信号（2表示选择，0表示取消选择）
    // 返回值：空
    //===========================================================
    void on_nameCBox_stateChanged(int arg1);

    //===========================================================
    // 函数名：on_DTCBox_stateChanged
    // 功能：根据对日期时间勾选框的选择设置对两个日期时间编辑器的编辑限制
    // 输入参数：选择信号（2表示选择，0表示取消选择）
    // 返回值：空
    //===========================================================
    void on_DTCBox_stateChanged(int arg1);

    //===========================================================
    // 函数名：on_moneyCBox_stateChanged
    // 功能：根据对消费金额勾选框的选择设置两个金额输入框的输入限制
    // 输入参数：选择信号（2表示选择，0表示取消选择）
    // 返回值：空
    //===========================================================
    void on_moneyCBox_stateChanged(int arg1);

    //===========================================================
    // 函数名：on_backButton_clicked
    // 功能：该类窗口界面上的返回按钮的click()信号的槽函数，关闭窗口界面
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void on_backButton_clicked();

    //===========================================================
    // 函数名：on_searchButton_clicked
    // 功能：该类窗口界面上的搜索按钮的click()信号的槽函数，根据搜索条件
    //      的设定，搜索符合条件的消费信息，并将其显示在窗口界面的组件
    //      tableWidget上
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void on_searchButton_clicked();

private:
    Ui::SearchDialog *ui;
    sortedXf *m_sortedRecords;
    sortedXf *m_result;

    //===========================================================
    // 函数名：updateTable
    // 功能：根据搜索结果保存链表，将其信息显示在窗口界面的组件tableWidget上
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void updateTable();

    //===========================================================
    // 函数名：search
    // 功能：根据搜索条件的设定，遍历有序消费信息链表，搜索符合要求的信息，
    //      插入到保存结果的链表中
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void search();

    //===========================================================
    // 函数名：jugeNoTime
    // 功能：搜索函数的辅助函数，在没有时间限制的情况下对有序链表进行搜索
    // 输入参数：有序消费信息链表的起始搜索节点的指针；其他选择的综合标
    //          志；最大金额；最小金额；学号；姓名
    // 返回值：空
    //===========================================================
    void jugeNoTime(sortedXf* p,int flag,
             int maxMoney,int minMoney,string stuNum,string name);

    //===========================================================
    // 函数名：jugeWithTime
    // 功能：搜索函数的辅助函数，在有时间限制的情况下对有序链表进行搜索
    // 输入参数：有序消费信息链表的头节点指针；其他选择的综合标志；最大金额；
    //         最小金额；学号；姓名
    // 返回值：空
    //===========================================================
    void jugeWithTime(sortedXf* p,int flag,
             int maxMoney,int minMoney,string stuNum,string name, string endTime);

    //===========================================================
    // 函数名：addToResult
    // 功能：根据符合要求的消费节点信息，用头插法插入信息至结果链表中
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void addToResult(sortedXf* p);
};

#endif // SEARCHDIALOG_H
