#ifndef LEADDATA_H
#define LEADDATA_H
#define WINNUM 99
#define MAXSIZE 64

#include "struct.h"
#include "cardoprotion.h"
#include "setdatetime.h"
#include "canteenopration.h"
#include <sstream>
#include <QDir>
#include <fstream>

class LeadData
{
public:

    //===========================================================
    // 函数名：LeadData
    // 功能：LeadData类的构造函数，完成成员变量m_sortedOp、m_opration
    //      的初始化，并对食堂窗口的消费记录完成排序并写入数据文件
    // 输入参数：空
    // 返回值：空
    //===========================================================
    LeadData();

    // 声明函数参数的形式
    typedef void (LeadData::*Func)();

    //===========================================================
    // 函数名：runTime
    // 功能：计算传入函数的运行时间并显示在控制台窗口中
    // 输入参数：LeadData类的函数指针
    // 返回值：空
    //===========================================================
    void runTime(Func f);

    //===========================================================
    // 函数名：initStu
    // 功能：根据同目录下students.txt文件内的学生信息，将学生开户，信息
    //      导入到学生信息系统的students容器中
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void initStu();

    //===========================================================
    // 函数名：getOpration
    // 功能：从xf.txt和cz.txt文件中获取系列操作语句
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void getOpration();

    //===========================================================
    // 函数名：sortOpration
    // 功能：将所有操作利用归并排序和折半插入排序根据时间的先后进行排序，将
    //      排序后的结果存入到成员变量m_sortedOp所指的链表中
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void sortOpration();

    //===========================================================
    // 函数名：carryOutOp
    // 功能：将排序后的操作在学生管理和食堂应用系统中进行从首至尾的实施
    // 输入参数：空
    // 返回值：最后一条操作的<日期，时间>
    //===========================================================
    pair<string,string> carryOutOp();

private:
    // 0-98对应99个窗口的消费操作(xf.txt)
    // 99对应卡片的补卡挂失充值等操作(cz.txt)
    xfStr* m_opration[WINNUM+1];
    // 对应有序的op操作
    xfStr* m_sortedOp;

    //===========================================================
    // 函数名：init_m_opration
    // 功能：初始化成员变量m_opration
    // 输入参数：空
    // 返回值：空
    //===========================================================
    void init_m_opration();

    //===========================================================
    // 函数名：insert_vec
    // 功能：利用折半插入排序，每次插入一个元素到有序序列中(按照str升序)
    // 输入参数：窗口号-1，日期时间字符串，有序待插入容器
    // 返回值：空
    //===========================================================
    void insert_vec(int i, string str, vector<pair<int,string> >& vec);

};

#endif // LEADDATA_H
